# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: meliora-backend2
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  profile: joana


functions:  
    getcategories:
        handler: handlers/CategoriesHandler/GetCategories.getCategories
        events: 
          - http:
              path: /categories
              method: get
              cors: true
    
    getCategoryById:
        handler: handlers/CategoriesHandler/GetCategoryById.getCategoryById
        events: 
          - http:
              path: /categories/{id}
              method: get
              cors: true
    
    creteCategory:
        handler: handlers/CategoriesHandler/CreateCategory.createCategory
        events:
          - http:
              path: /post-category
              method: post
              cors: true

    updateCategory:
        handler: handlers/CategoriesHandler/UpdateCategory.updateCategory
        events:
          - http:
              path: /update-category/{id}
              method: put
              cors: true
    
    deletecategory:
        handler: handlers/CategoriesHandler/DeleteCategory.deleteCategory
        events:
          - http:
              path: /delete-category/{id}
              method: delete
              cors: true
    #Products
    getAllProducts:
        handler: handlers/ProductsHandler/GetAllProducts.getAllProducts
        events:
          - http: 
              path: /products
              method: get
              cors: true

    getProductById:
        handler: handlers/ProductsHandler/GetProductById.getProductById
        events:
          - http:
              path: /products/{id}
              method: get
              cors: true
    
    createProduct:
        handler: handlers/ProductsHandler/CreateProduct.createProduct
        events:
          - http:
              path: /create-product
              method: post
              cors: true

    deleteProduct:
        handler: handlers/ProductsHandler/DeleteProduct.deleteProduct
        events: 
          - http:
              path: /delete-product/{id}
              method: delete
              cors: true
            
    #Customers
    getAllCustomers:
        handler: handlers/CustomersHandler/GetCustomers.getCustomers
        events:
          - http:
              path: /customers
              method: get
              cors: true
          
    createCustomer:
        handler: handlers/CustomersHandler/CreateCustomer.createCustomer
        events:
          - http:
              path: /create-customer
              method: post
              cors: true
    
    deleteCustomer: 
        handler: handlers/CustomersHandler/DeleteCustomer.deleteCustomer
        events:
          - http:
              path: /delete-customer
              method: delete
              cors: true

    updateCustomer: 
        handler: handlers/CustomersHandler/UpdateCustomer.updateCustomer
        events: 
          - http: 
              path: /update-customer/{id}
              method: put
              cors: true
        
    getCustomerById: 
        handler: handlers/CustomersHandler/GetCustomerById.getCustomerById
        events: 
          - http:
              path: /customer/{id}
              method: get
              cors: true